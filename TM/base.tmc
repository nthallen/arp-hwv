/* base.tmc */
TM typedef double VOLTS;
TM typedef double CELCIUS;
TM typedef double TORR;
TM typedef unsigned short UINT { text "%5u"; }
TM typedef unsigned long ULONG { text "%8ld"; }
TM typedef long L20 { text "%8ld"; }

TM typedef signed short AI_X1
  { text "%7.4lf"; convert VOLTS; collect x = sbrwa(x.address); }
  Calibration ( AI_X1, VOLTS ) {
    0, 0,
    32768, 4.096
  }

TM typedef signed short AI_X2
  { text "%7.4lf"; convert VOLTS; collect x = sbrwa(x.address); }
  Calibration ( AI_X2, VOLTS ) {
    0, 0,
    32768, 2.048
  }

TM typedef AI_X1 AI_T30K
  { text "%6.2lf"; convert CELCIUS; }
TM typedef AI_X1 AI_T10K
  { text "%6.2lf"; convert CELCIUS; }
TM typedef AI_X1 AI_XP384 { text "%7.4lf"; }
  Calibration ( AI_XP384, VOLTS ) {
    0, 0,
    32768, 10.6667
  }
TM typedef AI_X1 AI_XP768 { text "%7.4lf"; }
  Calibration ( AI_XP768, VOLTS ) {
    0, 0,
    32768, 5.3333
  }
/* ### fix gain and conversion */
TM typedef AI_XP768 AI_P100Torr { text "%5.2lf"; convert TORR; }
  Calibration ( AI_P100Torr, TORR ) {
    0, 0,
    30720, 100
  }
/* ### fix gain and conversion */
TM typedef AI_XP768 AI_P1000Torr { text "%5.1lf"; convert TORR; }
  Calibration ( AI_P1000Torr, TORR ) {
    0, 0,
    30720, 1000
  }

TM typedef unsigned short AO
  { text "%6.4lf"; convert VOLTS; collect x = sbrwa(x.address); }
  Calibration ( AO, VOLTS ) {
    0, 0,
    65536, 10.0
  }

TM 8 Hz UINT MFCtr, Synch;

/* AI */
TM 1 Hz AI_XP384 A_IRV; Address A_IRV 0xCB6; /* Axis A IR Voltage 0xC0E */
TM 1 Hz AI_T30K A_LMT; Address A_LMT 0xCA4; /* Lamp Module A Temp */
TM 1 Hz AI_T30K A_RgT; Address A_RgT 0xCC2; /* Air Regulator Temp */
/* TM 1 Hz AI_T30K ADetT; Address ADetT 0xC44; */ /* Axis A PMT Temp */
TM 1 Hz AI_XP384 AirHP; Address AirHP 0xCE2; /* Air High Prs */
TM 1 Hz AI_XP384 AirLP; Address AirLP 0xC58; /* Air Low Prs 0xC04 */
TM 1 Hz AI_XP384 AModP; Address AModP 0xC26; /* Axis A Lamp Module Pressure */
TM 1 Hz AI_X1    ARFBW; Address ARFBW 0xC38; /* Axis A RF Backward Pwr 0xC06 */
TM 1 Hz AI_X1    ARFFW; Address ARFFW 0xCE4; /* Axis A RF Forward Pwr */
TM 1 Hz AI_XP384 B_IRV; Address B_IRV 0xC2E; /* Axis B IR Voltage */
TM 1 Hz AI_T30K B_LMT; Address B_LMT 0xCA6; /* Lamp Module B Temp */
TM 1 Hz AI_T30K B_RFT; Address B_RFT 0xCC6; /* Axis B RF Amplifier Temp */
/* TM 1 Hz AI_T30K BDetT; Address BDetT 0xC46; */ /* Axis B PMT Temp */
TM 1 Hz AI_XP384 BModP; Address BModP 0xC28; /* Axis B Lamp Module Pressure */
TM 1 Hz AI_XP384 BRFBW; Address BRFBW 0xCD8; /* Axis B RF Backward Pwr 0xC08 */
TM 1 Hz AI_XP384 BRFFW; Address BRFFW 0xCE6; /* Axis B RF Forward Pwr */
TM 1 Hz AI_XP384 C_IRV; Address C_IRV 0xC4E; /* Axis C IR Voltage */
TM 1 Hz AI_T30K C_LMT; Address C_LMT 0xCA8; /* Lamp Module C Temp */
TM 1 Hz AI_T30K C_RFT; Address C_RFT 0xCC8; /* Axis C RF Amplifier Temp */
/* TM 1 Hz AI_T30K CDetT; Address CDetT 0xC48; */ /* Axis C PMT Temp */
TM 1 Hz AI_T30K ChpAT; Address ChpAT 0xC84; /* Axis A Chopper Temp */
TM 1 Hz AI_T30K ChpBT; Address ChpBT 0xC86; /* Axis B Chopper Temp */
TM 1 Hz AI_T30K ChpCT; Address ChpCT 0xC88; /* Axis C Chopper Temp */
TM 1 Hz AI_X1 LMB_I; Address LMB_I 0xD10; /* Command Current 0 */
/* TM 1 Hz AI_X1 Cmd_1_I; Address Cmd_1_I 0xD12; */ /* Command Current 1 */
TM 1 Hz AI_X1 LMC_I; Address LMC_I 0xD14; /* Command Current 2 */
TM 1 Hz AI_X1 LCmd1_I; Address LCmd1_I 0xD16; /* Command Current 3 */
TM 1 Hz AI_X1 LCmd2_I; Address LCmd2_I 0xD18; /* Command Current 4 */
/* TM 1 Hz AI_X1 Cmd_5_I; Address Cmd_5_I 0xD1A; */ /* Command Current 5 */
TM 1 Hz AI_X1 MZ1_I; Address MZ1_I 0xD1C; /* Command Current 6 */
TM 1 Hz AI_X1 LMA_I; Address LMA_I 0xD1E; /* Command Current 7 */
TM 1 Hz AI_X1 MZ2_I; Address MZ2_I 0xD30; /* Command Current 8 */
/* TM 1 Hz AI_X1 Cmd_9_I; Address Cmd_9_I 0xD32; */ /* Command Current 9 */
TM 1 Hz AI_X1 MZ3_I; Address MZ3_I 0xD34; /* Command Current 10 */
TM 1 Hz AI_X1 MZ4_I; Address MZ4_I 0xD36; /* Command Current 11 */
TM 1 Hz AI_X1 AirA_I; Address AirA_I 0xD38; /* Command Current 12 */
/* TM 1 Hz AI_X1 Cmd_13_I; Address Cmd_13_I 0xD3A; */ /* Command Current 13 */
TM 1 Hz AI_X1 AirB_I; Address AirB_I 0xD3C; /* Command Current 14 */
TM 1 Hz AI_X1 Cmd_15_I; Address Cmd_15_I 0xD3E; /* Command Current 15 */
TM 1 Hz AI_XP384 CModP; Address CModP 0xC2A; /* Axis C Lamp Module Pressure */
TM 1 Hz AI_XP384 CRFBW; Address CRFBW 0xC98; /* Axis C RF Backward Pwr 0xC0A */
TM 1 Hz AI_XP384 CRFFW; Address CRFFW 0xCE8; /* Axis C RF Forward Pwr */
TM 1 Hz AI_T30K FAA_T; Address FAA_T 0xC64; /* Axis A Filter Assy Temp */
TM 1 Hz AI_T30K FAB_T; Address FAB_T 0xC66; /* Axis B Filter Assy Temp */
TM 1 Hz AI_T30K FAC_T; Address FAC_T 0xC68; /* Axis C Filter Assy Temp */
TM 8 Hz AI_X1 HHH1P; Address HHH1P 0xCEE; /* HHH Cell Prs #1 */
TM 8 Hz AI_T10K HHH1T; Address HHH1T 0xC8E; /* HHH Cell T #1 */
TM 8 Hz AI_X1 HHH2P; Address HHH2P 0xC9C; /* HHH Cell Prs #2 0xC10 */
TM 8 Hz AI_T10K HHH2T; Address HHH2T 0xCAE; /* HHH Cell T #2 */
TM 8 Hz AI_X1 HHHDP; Address HHHDP 0xC30; /* HHH Cell Diff Prs */
TM 1 Hz AI_T30K HHHPT; Address HHHPT 0xCCE; /* HHH Cell Prs Assy Temp */
TM 1 Hz AI_X1 HPV_P; Address HPV_P 0xC90; /* HHH Prs Vessel Prs */
TM 1 Hz AI_X1 HPV_RH; Address HPV_RH 0xCB0; /* HHH Prs Vessel RH */
TM 1 Hz AI_T30K HPV1T; Address HPV1T 0xC50; /* HHH Prs Vessel T #1 */
TM 1 Hz AI_T30K HPV2T; Address HPV2T 0xC70; /* HHH Prs Vessel T #2 */
TM 1 Hz AI_T30K IWH1T; Address IWH1T 0xCCC; /* Inlet Wall Heat T #1 */
TM 1 Hz AI_T30K IWH2T; Address IWH2T 0xCEC; /* Inlet Wall Heat T #2 */
TM 1 Hz AI_XP768 L1Flw; Address L1Flw 0xC74; /* Lab Flow #1 */
TM 1 Hz AI_XP768 L2Flw; Address L2Flw 0xC94; /* Lab Flow #2 */
TM 1 Hz AI_XP768 L3Flw; Address L3Flw 0xCB4; /* Lab Flow #3 */
TM 1 Hz AI_XP768 L4Flw; Address L4Flw 0xCD4; /* Lab Flow #4 */
TM 1 Hz AI_X1 Las_I; Address Las_I 0xCF2; /* HHH Laser Current */
TM 1 Hz AI_T30K LFB_T; Address LFB_T 0xC36; /* Lab Bubbler Temp */
TM 1 Hz AI_XP384 LFB1P; Address LFB1P 0xCF4; /* Lab Bubbler Prs #1 */
TM 1 Hz AI_XP384 LFB2P; Address LFB2P 0xC5A; /* Lab Bubbler Prs #2 0xC16 */
TM 1 Hz AI_XP384 LFT_P; Address LFT_P 0xC56; /* Lab Flow Tube3 Prs */
TM 1 Hz AI_X1 LTE1R4T; Address LTE1R4T 0xCD2; /* Laser TEC Temp */
TM 1 Hz AI_T30K MM_1T; Address MM_1T 0xC52; /* Mirror Mount Diagnostic T */
TM 1 Hz AI_T30K MM_2T; Address MM_2T 0xC72; /* Mirror Mount Diagnostic T */
TM 1 Hz AI_T30K MM_3T; Address MM_3T 0xC92; /* Mirror Mount Diagnostic T */
TM 1 Hz AI_T30K MM_4T; Address MM_4T 0xCB2; /* Mirror Mount Diagnostic T */
TM 1 Hz AI_X1 MZ1CT; Address MZ1CT 0xCD0; /* Mirror Mount Control Temp */
TM 1 Hz AI_X1 MZ2CT; Address MZ2CT 0xCF0; /* Mirror Mount Control Temp */
TM 1 Hz AI_X1 MZ3CT; Address MZ3CT 0xCDC; /* Mirror Mount Control Temp 0xC12 */
TM 1 Hz AI_X1 MZ4CT; Address MZ4CT 0xC32; /* Mirror Mount Control Temp */
TM 1 Hz AI_X1 PampT; Address PampT 0xC5C; /* Power Amp Temp 0xC14 */
TM 1 Hz AI_T30K PDACS_1T; Address PDACS_1T 0xC3E; /* PDACS Housekeeping Temp */
TM 1 Hz AI_T30K PDACS_2T; Address PDACS_2T 0xC7E; /* PDACS Housekeeping Temp */
TM 1 Hz AI_T30K PDACS_3T; Address PDACS_3T 0xCBE; /* PDACS Housekeeping Temp */
TM 1 Hz AI_T30K PDACS_4T; Address PDACS_4T 0xCDE; /* PDACS Housekeeping Temp */
TM 1 Hz AI_T30K PDACS_5T; Address PDACS_5T 0xCFE; /* PDACS Housekeeping Temp */
TM 1 Hz AI_T10K PIB1T; Address PIB1T 0xCE0; /* Primary Inlet Rear Therm Ring */
TM 1 Hz AI_T10K PIB2T; Address PIB2T 0xCBC; /* Primary Inlet Rear Therm Ring 0xC02 */
TM 1 Hz AI_T10K PIB3T; Address PIB3T 0xC22; /* Primary Inlet Rear Therm Ring */
TM 1 Hz AI_T10K PIB4T; Address PIB4T 0xC42; /* Primary Inlet Rear Therm Ring */
TM 1 Hz AI_T10K PIB5T; Address PIB5T 0xC62; /* Primary Inlet Rear Therm Ring */
TM 1 Hz AI_T10K PIB6T; Address PIB6T 0xC82; /* Primary Inlet Rear Therm Ring */
TM 1 Hz AI_T10K PIB7T; Address PIB7T 0xCA2; /* Primary Inlet Rear Therm Ring */
TM 1 Hz AI_T10K PIF1T; Address PIF1T 0xCFC; /* Primary Inlet Fwd Therm Ring 0xC00 */
TM 1 Hz AI_T10K PIF2T; Address PIF2T 0xC20; /* Primary Inlet Fwd Therm Ring */
TM 1 Hz AI_T10K PIF3T; Address PIF3T 0xC40; /* Primary Inlet Fwd Therm Ring */
TM 1 Hz AI_T10K PIF4T; Address PIF4T 0xC60; /* Primary Inlet Fwd Therm Ring */
TM 1 Hz AI_T10K PIF5T; Address PIF5T 0xC80; /* Primary Inlet Fwd Therm Ring */
TM 1 Hz AI_T10K PIF6T; Address PIF6T 0xCA0; /* Primary Inlet Fwd Therm Ring */
TM 1 Hz AI_T10K PIF7T; Address PIF7T 0xCC0; /* Primary Inlet Fwd Therm Ring */
TM 1 Hz AI_P1000Torr SD_HP; Address SD_HP 0xC6C; /* Secondary Duct High Prs (1000 torr) */
TM 1 Hz AI_P100Torr SD_LP; Address SD_LP 0xC4C; /* Secondary Duct Low Prs (100 torr) */
TM 1 Hz AI_T30K SDP_T; Address SDP_T 0xC8C; /* Secondary Duct Prs Guage Temp */
TM 1 Hz AI_XP768 SDPDP; Address SDPDP 0xC2C; /* Secondary Duct Pitot Diff Prs */
TM 1 Hz AI_T10K SFB1T; Address SFB1T 0xC4A; /* Secondary Inlet Therm Ring */
TM 1 Hz AI_T10K SFB2T; Address SFB2T 0xC6A; /* Secondary Inlet Therm Ring */
TM 1 Hz AI_T10K SFB3T; Address SFB3T 0xC8A; /* Secondary Inlet Therm Ring */
/* TM 1 Hz AI_T10K SFB4T; Address SFB4T 0xCAA; */ /* Secondary Inlet Therm Ring */
/* TM 1 Hz AI_T10K SFB5T; Address SFB5T 0xCCA; */ /* Secondary Inlet Therm Ring */
/* TM 1 Hz AI_T10K SFB6T; Address SFB6T 0xCEA; */ /* Secondary Inlet Therm Ring */
/* TM 1 Hz AI_T10K SFB7T; Address SFB7T 0xCDA; */ /* Secondary Inlet Therm Ring 0xC0C */
TM 1 Hz AI_T30K SPV1T; Address SPV1T 0xC76; /* Signal Prs Vessel T #1 */
TM 1 Hz AI_T30K SPV2T; Address SPV2T 0xC96; /* Signal Prs Vessel T #2 */
TM 1 Hz AI_X1 TVPos; Address TVPos 0xCAC; /* Throttle Valve Position */

/* AO */
TM 1 Hz AO HtASt; Address HtASt 0x408; /* Axis A Heat Set Pt */
TM 1 Hz AO RFASt; Address RFASt 0x40A; /* Axis A RF Set Pt */
TM 1 Hz AO HtBSt; Address HtBSt 0x40C; /* Axis B Heat Set Pt */
TM 1 Hz AO RFBSt; Address RFBSt 0x40E; /* Axis B RF Set Pt */
TM 1 Hz AO HtCSt; Address HtCSt 0x410; /* Axis C Heat Set Pt */
TM 1 Hz AO RFCSt; Address RFCSt 0x412; /* Axis C RF Set Pt */
TM 1 Hz AO MZ1St; Address MZ1St 0x406; /* Mirror Temp 1 Set Pt */
TM 1 Hz AO MZ2St; Address MZ2St 0x404; /* Mirror Temp 2 Set Pt */
TM 1 Hz AO MZ3St; Address MZ3St 0x402; /* Mirror Temp 3 Set Pt */
TM 1 Hz AO MZ4St; Address MZ4St 0x400; /* Mirror Temp 4 Set Pt */

%{
/* SB/64 Ungated Counters

  600  Status
  602  Hardware Rev
  610  Counter 1 Low Word
  612  Counter 1 High Word
  614  Counter 2 Low Word
  616  Counter 2 High Word
  618  Counter 3 Low Word
  61A  Counter 3 High Word
  61C  Counter 4 Low Word
  61E  Counter 4 High Word

Status

  D0  Counter 1 Overflow
  D1  Counter 2 Overflow
  D2  Counter 3 Overflow
  D3  Counter 4 Overflow
  D4  Counter 1 16-bit Overflow  
  D5  Counter 2 16-bit Overflow
  D6  Counter 3 16-bit Overflow
  D7  Counter 4 16-bit Overflow
  D8-D11 Integration Period
	F == 1 Hz
	7 == 2 Hz
	3 == 4 Hz
	1 == 8 Hz
	0 == 16 Hz
  D14 L2Stat
  D15 Resynch

  Counter is automatically synchronized with reads of the status
  word, but in order for this to work reliably, we need to take
  steps to make sure the status and the counters are read in the
  correct order and close together in time. i.e. we need to use a
  TM group to collect the counters.

  The counters must be programmed initially to set the
  integration period. This must match the reporting rate.

*/

  #define CT24long(x) ((long)((x).low) + (((unsigned long)((x).high))<<16))
%}
TM typedef UINT CT16 { collect x = sbrwa( x.address ); }
TM typedef CT16 CTstat {
	text "%04x";
}

TM typedef struct {
  unsigned short low;
  unsigned char high;
} CT24 {
  text "%8ld";
  convert L20 CT24long();
}

TM 8 Hz CT24 PMTA_Counts; Address PMTA_Counts 0x610; /* Axis A PMT Counts */
TM 8 Hz CT24 PMTB_Counts; Address PMTB_Counts 0x614; /* Axis B PMT Counts */
TM 8 Hz CT24 PMTC_Counts; Address PMTC_Counts 0x618; /* Axis C PMT Counts */
TM 8 Hz CT24 UVA1_Counts; Address UVA1_Counts 0x634; /* Axis A UV1 counts */
TM 8 Hz CT24 UVA2_Counts; Address UVA2_Counts 0x638; /* Axis A UV2 counts */
TM 8 Hz CT24 UVB1_Counts; Address UVB1_Counts 0x63C; /* Axis B UV1 counts */
TM 8 Hz CT24 UVB2_Counts; Address UVB2_Counts 0x650; /* Axis B UV2 counts */
TM 8 Hz CT24 UVC1_Counts; Address UVC1_Counts 0x654; /* Axis C UV1 counts */
TM 8 Hz CT24 UVC2_Counts; Address UVC2_Counts 0x658; /* Axis C UV2 counts */
TM 8Hz Ctstat Ct0Stat; Address Ct0Stat 0x600; /* Counter 0 Stat */
TM 8Hz Ctstat Ct1Stat; Address Ct1Stat 0x620; /* Counter 1 Stat */
TM 8Hz Ctstat Ct2Stat; Address Ct2Stat 0x640; /* Counter 2 Stat */

Group Cts0 ( Ct0Stat, PMTA_Counts, PMTB_Counts, PMTC_Counts ) {
  Ct0Stat = sbrwa( Ct0Stat.address );
  PMTA_Counts.low  = sbrwa( PMTA_Counts.address );
  PMTA_Counts.high = sbrba( PMTA_Counts.address+2 );
  PMTB_Counts.low  = sbrwa( PMTB_Counts.address );
  PMTB_Counts.high = sbrba( PMTB_Counts.address+2 );
  PMTC_Counts.low  = sbrwa( PMTC_Counts.address );
  PMTC_Counts.high = sbrba( PMTC_Counts.address+2 );
}

Group Cts1 ( Ct1Stat, UVA1_Counts, UVA2_Counts, UVB1_Counts ) {
  Ct1Stat = sbrwa( Ct1Stat.address );
  UVA1_Counts.low  = sbrwa( UVA1_Counts.address );
  UVA1_Counts.high = sbrba( UVA1_Counts.address+2 );
  UVA2_Counts.low  = sbrwa( UVA2_Counts.address );
  UVA2_Counts.high = sbrba( UVA2_Counts.address+2 );
  UVB1_Counts.low  = sbrwa( UVB1_Counts.address );
  UVB1_Counts.high = sbrba( UVB1_Counts.address+2 );
}

Group Cts2 ( Ct2Stat, UVB2_Counts, UVC1_Counts, UVC2_Counts ) {
  Ct2Stat = sbrwa( Ct2Stat.address );
  UVB2_Counts.low  = sbrwa( UVB2_Counts.address );
  UVB2_Counts.high = sbrba( UVB2_Counts.address+2 );
  UVC1_Counts.low  = sbrwa( UVC1_Counts.address );
  UVC1_Counts.high = sbrba( UVC1_Counts.address+2 );
  UVC2_Counts.low  = sbrwa( UVC2_Counts.address );
  UVC2_Counts.high = sbrba( UVC2_Counts.address+2 );
}

/* Digital Status Lines */
TM typedef unsigned short DSWord
  { text "%5d"; collect x=sbrwa(x.address); }
TM typedef unsigned char DSByte
  { text "%3d"; collect x=sbrba(x.address); }
TM 1 Hz DSWord DS822; Address DS822 0x822; /* DS for commands 0-15 */
TM 1 Hz DSWord DS824; Address DS824 0x824; /* DS for commands 16-31 */
TM 1 Hz DSWord DS844; Address DS844 0x844; /* S for commands 0-15 */
  collect DS844 = sbrwa(DS844.address) ^ 0xFFFF;
/* TM 0 Hz DSByte DS860; Address DS860 0x860; */ /* S for commands 16-23 */
/*  collect DS860 = sbrba(DS860.address) ^ 0xFF; */
TM 1 Hz DSByte DS853; Address DS853 0x853; /* I/O Switches, etc. */

/* DACS PTRH */
%{
  #include "ptrh.h"
  ptrh DACS_ptrh =
    ptrh("DACS",0x300,0xB28E,0x9548,0x6EE9,0x610A,0x812C,0x6C80);
%}
TM typedef unsigned char MS5607Db { text "%3d"; }

TM 1 Hz UINT DACS_T1; collect DACS_T1 = DACS_ptrh.SHT21T();
TM 1 Hz UINT DACS_RH; collect DACS_RH = DACS_ptrh.SHT21RH();
TM 1 Hz UINT DACS_T2a; collect DACS_T2a = DACS_ptrh.MS5607Ta();
TM 1 Hz MS5607Db DACS_T2b; collect DACS_T2b = DACS_ptrh.MS5607Tb(); 
TM 1 Hz UINT DACS_Pa; collect DACS_Pa = DACS_ptrh.MS5607Pa();
TM 1 Hz MS5607Db DACS_Pb; collect DACS_Pb = DACS_ptrh.MS5607Pb(); 
